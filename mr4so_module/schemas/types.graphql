scalar FileReference

type Person
{
    id: ID! @id
    name: String!
    address: String
    gender: Gender
    dateOfBirth: Date
    companies: [Company!]! @relationship(type: "WORKS_FOR", direction: OUT)
    avatarImage: FileReference
    avatarImageFileName: String
}

enum Gender
{
    Female
    Male
    Other
}


type Company
{
    id: ID! @id
    name: String!
    industries: [Industry!]!
    description: String
    website: String
    logo: FileReference
    employees: [Person!]! @relationship(type: "WORKS_FOR", direction: IN)
    products: [Product!]! @relationship(type: "OFFERED_BY", direction: IN)
}

enum Industry
{
    Agriculture
    Foods
    Construction
    Education
    Research
    Transportation
    Finance
    Insurance
    RealEstate
    Services
    IT
    Other
}

type Product
{
    id: ID! @id
    name: String!
    description: String
    price: Float
    quantity: Int
    company: Company @relationship(type: "OFFERED_BY", direction: OUT)
}

enum ProductType {
    Product
    Service
    System
    Other
}


type User @jwt {
    username: String
}

type ExternalUser
@mutation(operations: []) # Make this type read-only
{
    id: Int!
    first_name: String!
    last_name: String!
    email: String
    avatar: String
}

type RoesbergData
@mutation(operations: []) # Make this type read-only
{
    id: Int!
    formData: String!
    contact: String!
}

type DemonstratorPlantData
{
    topic: String!
    value: String!
    lastUpdated: String
}

type ServerStatus 
{
    id: String!
    serverTime: String
    lastUpdated: String
    method: String
}
